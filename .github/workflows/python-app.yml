# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

      - name: Lint with ruff
        run: |
          ruff check --fix src

      # - name: Test with pytest
      #   env:
      #     MODE: production
      #     LLM_SETTINGS_PROVIDER: ollama
      #     LLM_SETTINGS_MODEL: phi3:14b
      #     LLM_SETTINGS_TEMPERATURE: "0.0"
      #     PROJECT_NAME: rag-api
      #     API_STR: /api
      #     OPENROUTER_API_BASE: https://openrouter.ai/api/v1
      #     OPENROUTER_API_KEY: mocked_openrouter_api_key
      #     OLLAMA_API_BASE: http://localhost:11434
      #     EMB_MODEL_ID: nomic-embed-text
      #     NEO4J_URI: bolt://localhost:7687
      #     NEO4J_USERNAME: mocked_neo4j_username
      #     NEO4J_PASSWORD: mocked_neo4j_password
      #     PROVIDERS_OPENROUTER_BASE_URL: https://openrouter.ai/api/v1
      #     PROVIDERS_OPENROUTER_API_KEY: mocked_providers_openrouter_api_key
      #     PROVIDERS_OLLAMA_BASE_URL: http://localhost:11434/v1
      #     PROVIDERS_OLLAMA_API_KEY: mocked_providers_ollama_api_key
      #     PROVIDERS_OPENAI_BASE_URL: https://api.openai.com
      #     PROVIDERS_OPENAI_API_KEY: mocked_providers_openai_api_key
      #   run: |
      #     pytest
