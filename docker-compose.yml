services:
  fastapi:
    container_name: fastAPI
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NEO4J_URI=bolt://host.docker.internal:7687
      - OLLAMA_API_BASE=http://host.docker.internal:11434
    volumes:
      - ./src:/app
    ports:
      - 8000:8000
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]
    restart: on-failure
    depends_on:
      - neo4j

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    environment:
      - NEO4J_server_memory_pagecache_size=2G
      - NEO4J_server_memory_heap_initial__size=4G
      - NEO4J_server_memory_heap_max__size=4G
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_AUTH=none
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - ./neo4j/neo4j-data:/data
      - ./neo4j/backup:/backup
    ports:
      - 7474:7474
      - 7687:7687

  redis:
    container_name: redis-db
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"

  tika:
    container_name: tika
    image: apache/tika:latest
    platform: linux/arm64
    ports:
      - "9998:9998"
    deploy:
      resources:
        limits:
          memory: 3gb
